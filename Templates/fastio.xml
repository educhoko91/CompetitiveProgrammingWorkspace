<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="fastIO">public static void main(String[] args) throws Exception&#13;
    {&#13;
        InputReader in = new InputReader(System.in);&#13;
        ${cursor}&#13;
    }&#13;
&#13;
    // FAST IO&#13;
	private static class InputReader {&#13;
		private InputStream stream;&#13;
		private byte[] buf = new byte[1024];&#13;
		private int curChar;&#13;
		private int numChars;&#13;
		private SpaceCharFilter filter;&#13;
&#13;
		public InputReader(InputStream stream) {&#13;
			this.stream = stream;&#13;
		}&#13;
&#13;
		public int read() throws EOFException {&#13;
			if (numChars == -1)&#13;
				throw new EOFException();&#13;
			if (curChar &gt;= numChars) {&#13;
				curChar = 0;&#13;
				try {&#13;
					numChars = stream.read(buf);&#13;
				} catch (IOException e) {&#13;
					throw new InputMismatchException();&#13;
				}&#13;
				if (numChars &lt;= 0)&#13;
					return -1;&#13;
			}&#13;
			return buf[curChar++];&#13;
		}&#13;
&#13;
		public int nextInt() throws EOFException {&#13;
			int c = read();&#13;
			while (isSpaceChar(c))&#13;
				c = read();&#13;
			int sgn = 1;&#13;
			if (c == '-') {&#13;
				sgn = -1;&#13;
				c = read();&#13;
			}&#13;
			int res = 0;&#13;
			do {&#13;
				if (c &lt; '0' || c &gt; '9')&#13;
					throw new InputMismatchException();&#13;
				res *= 10;&#13;
				res += c - '0';&#13;
				c = read();&#13;
			} while (!isSpaceChar(c));&#13;
			return res * sgn;&#13;
		}&#13;
&#13;
		public String readString() throws EOFException {&#13;
			int c = read();&#13;
			while (isSpaceChar(c))&#13;
				c = read();&#13;
			StringBuilder res = new StringBuilder();&#13;
			do {&#13;
				res.appendCodePoint(c);&#13;
				c = read();&#13;
			} while (!isSpaceChar(c));&#13;
			return res.toString();&#13;
		}&#13;
&#13;
		public double nextDouble() throws EOFException {&#13;
			int c = read();&#13;
			while (isSpaceChar(c))&#13;
				c = read();&#13;
			int sgn = 1;&#13;
			if (c == '-') {&#13;
				sgn = -1;&#13;
				c = read();&#13;
			}&#13;
			double res = 0;&#13;
			while (!isSpaceChar(c) &amp;&amp; c != '.') {&#13;
				if (c == 'e' || c == 'E')&#13;
					return res * Math.pow(10, nextInt());&#13;
				if (c &lt; '0' || c &gt; '9')&#13;
					throw new InputMismatchException();&#13;
				res *= 10;&#13;
				res += c - '0';&#13;
				c = read();&#13;
			}&#13;
			if (c == '.') {&#13;
				c = read();&#13;
				double m = 1;&#13;
				while (!isSpaceChar(c)) {&#13;
					if (c == 'e' || c == 'E')&#13;
						return res * Math.pow(10, nextInt());&#13;
					if (c &lt; '0' || c &gt; '9')&#13;
						throw new InputMismatchException();&#13;
					m /= 10;&#13;
					res += (c - '0') * m;&#13;
					c = read();&#13;
				}&#13;
			}&#13;
			return res * sgn;&#13;
		}&#13;
&#13;
		public long nextLong() throws EOFException {&#13;
			int c = read();&#13;
			while (isSpaceChar(c))&#13;
				c = read();&#13;
			int sgn = 1;&#13;
			if (c == '-') {&#13;
				sgn = -1;&#13;
				c = read();&#13;
			}&#13;
			long res = 0;&#13;
			do {&#13;
				if (c &lt; '0' || c &gt; '9')&#13;
					throw new InputMismatchException();&#13;
				res *= 10;&#13;
				res += c - '0';&#13;
				c = read();&#13;
			} while (!isSpaceChar(c));&#13;
			return res * sgn;&#13;
		}&#13;
&#13;
		public boolean isSpaceChar(int c) {&#13;
			if (filter != null)&#13;
				return filter.isSpaceChar(c);&#13;
			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;&#13;
		}&#13;
&#13;
		public String next() throws EOFException {&#13;
			return readString();&#13;
		}&#13;
&#13;
		public interface SpaceCharFilter {&#13;
			public boolean isSpaceChar(int ch);&#13;
		}&#13;
	}&#13;
</template></templates>