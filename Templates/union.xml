<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="Union Find" enabled="true" name="union">	/*&#13;
	 * &#13;
	 * **************&#13;
	 * * UNION FIND *&#13;
	 * **************&#13;
	 * &#13;
	 * TEMPLATE: union&#13;
	 * &#13;
	 */&#13;
	&#13;
	public static int parent[];&#13;
	public static int numSets;&#13;
	public static int setSize[];&#13;
	&#13;
	public static void initSet(int n) {&#13;
		parent = new int[n];&#13;
		setSize = new int[n];&#13;
		numSets=n;&#13;
		for(int i=0; i&lt;n; i++) {&#13;
			parent[i]=i;&#13;
			setSize[i]=1;&#13;
		}&#13;
	}&#13;
	&#13;
	public static int findSet(int i) {&#13;
		if(parent[i]==i) {&#13;
			return i;&#13;
		}&#13;
		return findSet(parent[i]);&#13;
	}&#13;
	&#13;
	public static void unionSet(int i, int j) {&#13;
		if(!isSameSet(i, j)) { &#13;
			numSets--;&#13;
			setSize[findSet(i)] += setSize[findSet(j)];&#13;
		}&#13;
		parent[findSet(i)] = findSet(j);&#13;
	}&#13;
	&#13;
	public static int sizeOfSet(int i) {&#13;
		return setSize[findSet(i)];&#13;
	}&#13;
	&#13;
	public static boolean isSameSet(int i, int j) {&#13;
		return findSet(i) == findSet(j);&#13;
	}&#13;
	&#13;
	public static int countSets() {&#13;
		return numSets;&#13;
	}</template></templates>