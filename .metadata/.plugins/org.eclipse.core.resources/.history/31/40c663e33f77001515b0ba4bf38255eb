import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Scanner;


public class Main {

	/*public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int[] hand = new int[3];
		while(true){
			hand[0] = in.nextInt();
			hand[1] = in.nextInt();
			hand[2] = in.nextInt();
			if(hand[0]==0 && hand[1]==0 && hand[2]==0)
				break;
			Arrays.sort(hand);
			if(hand[0]==hand[1] && hand[1]==hand[2])  {
				if(hand[0]==13) {
					hand[0]=-1;
				}
				else {
					hand[0]++;
					hand[1]++;
					hand[2]++;
				}
			}
			else if(hand[0]==hand[1]) {
				if(hand[2]+1!=hand[0] && hand[2]!=13) {
					hand[2]++;
				}
				else if(hand[2]+1==hand[0] && hand[2]<11) {
					hand[2]+=2;
				}
				else if(hand[2]==13 && hand[0]+1<12) {
					hand[0]++;
					hand[1]++;
					hand[2]=1;
				}
				else if(hand[2]==12 && hand[0]==13){
					hand[0]=1;
					hand[1]=1;
					hand[2]=1;
				}
			}
			else if(hand[1]==hand[2]) {
				if(hand[0]+1!=hand[1] && hand[0]!=13) {
					hand[0]++;
				}
				else if(hand[0]+1==hand[1] && hand[0]<11) {
					hand[0]+=2;
				}
				else if(hand[0]==13 && hand[1]+1<12) {
					hand[2]++;
					hand[1]++;
					hand[0]=1;
				}
				else if(hand[0]==12 && hand[1]==13){
					hand[0]=1;
					hand[1]=1;
					hand[2]=1;
				}
			}
			else {
				hand[0]=1;
				hand[1]=1;
				hand[2]=2;
			}
			Arrays.sort(hand);
			if(hand[0]==-1)
				System.out.println("*");
			else
				System.out.println(hand[0]+" "+hand[1]+" "+hand[2]);
		}

	}*/
	
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		Hand[] ladder = new Hand[168];
		HashMap<Hand, Integer> map = new HashMap<Hand, Integer>();
		int index=0;
		for(int i=1; i<=13; i++) {
			for(int j=2; j<=13;j++) {
				if(i==13 && j==13)
					break;
				Hand hand = new Hand(new int[]{i,i,j});
				ladder[index]=hand;
				map.put(hand, index);
				index++;
			}
		}
		for(int i=1; i<=13; i++) {
			Hand hand = new Hand(new int[]{i,i,i});
			ladder[index]=hand;
			map.put(hand, index);
			index++;
		}
		int[] hand = new int[3];
		while(true) {
			hand[0]=in.nextInt();
			hand[1]=in.nextInt();
			hand[2]=in.nextInt();
			if(hand[0]==0 && hand[1]==0 && hand[2]==0)
				break;
			index =Arrays.binarySearch(ladder, new Hand(hand));
			System.out.println(ladder[index+1].hand[0]+" "+ladder[index+1].hand[1]+" "+ladder[index+1].hand[2]);
		}
		
	
	}

}

class Hand implements Comparable<Hand>{
	int[] hand;
	int index;

	@Override
	public boolean equals(Object obj) {
		int[] hand2 = ((Hand) obj).hand;
		return hand[0]==hand2[0] && hand[1]==hand2[1] && hand[2]==hand2[2];
	}
	
	public Hand(int[] hand, int index) {
		this.hand = hand;
		this.index = index;
	}

	@Override
	public int compareTo(Hand o) {
		
		return Integer.compare(index, o.index);
	}
}
